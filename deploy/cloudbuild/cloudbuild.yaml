timeout: 1800s
options:
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: ALLOW_LOOSE
substitutions:
  _ENV: staging
  _REGION: asia-northeast1
  _ARTIFACT_REPO: personal-website
  _BACKEND_SERVICE: personal-website-api
  _FRONTEND_SERVICE: personal-website-frontend
  _VPC_CONNECTOR: ""
  _BACKEND_SERVICE_ACCOUNT: ""
  _FRONTEND_SERVICE_ACCOUNT: ""
  _BACKEND_SECRET_JWT: ""
  _BACKEND_SECRET_STATE: ""
  _BACKEND_SECRET_CSRF: ""
  _BACKEND_GOOGLE_CLIENT_ID: ""
  _BACKEND_SECRET_GOOGLE_CLIENT_SECRET: ""
  _BACKEND_SECRET_RECAPTCHA: ""
  _FRONTEND_SECRET_RECAPTCHA: ""
  _FRONTEND_API_BASE_URL: ""
  _FIRESTORE_DATABASE_ID: "(default)"
  _FIRESTORE_COLLECTION_PREFIX: ""
  _BACKEND_TRAFFIC: "100"
  _FRONTEND_TRAFFIC: "100"

steps:
  - name: gcr.io/cloud-builders/docker
    id: build-backend-image
    args:
      - build
      - -f
      - backend/Dockerfile
      - -t
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/backend:${SHORT_SHA}
      - backend

  - name: gcr.io/cloud-builders/docker
    id: build-frontend-image
    args:
      - build
      - -f
      - frontend/Dockerfile
      - -t
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/frontend:${SHORT_SHA}
      - frontend

  - name: gcr.io/cloud-builders/docker
    id: push-backend-image
    args:
      - push
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/backend:${SHORT_SHA}

  - name: gcr.io/cloud-builders/docker
    id: push-frontend-image
    args:
      - push
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/frontend:${SHORT_SHA}

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: deploy-cloud-run
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail

        BACKEND_IMAGE="${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/backend:${SHORT_SHA}"
        FRONTEND_IMAGE="${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/frontend:${SHORT_SHA}"

        if [[ -z "${_BACKEND_SERVICE_ACCOUNT}" || -z "${_FRONTEND_SERVICE_ACCOUNT}" ]]; then
          echo "Service account substitutions are required." >&2
          exit 1
        fi

        if [[ -z "${_BACKEND_SECRET_JWT}" ]]; then
          echo "Backend JWT secret substitution is required." >&2
          exit 1
        fi

        if [[ -z "${_BACKEND_SECRET_STATE}" ]]; then
          echo "Backend state secret substitution is required." >&2
          exit 1
        fi

        if [[ -z "${_BACKEND_GOOGLE_CLIENT_ID}" ]]; then
          echo "Backend Google client ID substitution is required." >&2
          exit 1
        fi

        if [[ -z "${_BACKEND_SECRET_GOOGLE_CLIENT_SECRET}" ]]; then
          echo "Backend Google client secret substitution is required." >&2
          exit 1
        fi

        if [[ -z "${_BACKEND_SECRET_CSRF}" ]]; then
          echo "Backend CSRF secret substitution is required." >&2
          exit 1
        fi

        if [[ -z "${_FRONTEND_API_BASE_URL}" ]]; then
          echo "Frontend public API base URL substitution is required." >&2
          exit 1
        fi

        BACKEND_TRAFFIC="${_BACKEND_TRAFFIC:-100}"
        FRONTEND_TRAFFIC="${_FRONTEND_TRAFFIC:-100}"

        BACKEND_CMD=(
          gcloud run deploy "${_BACKEND_SERVICE}-${_ENV}"
          --project="$PROJECT_ID"
          --region="${_REGION}"
          --platform=managed
          --image="${BACKEND_IMAGE}"
          --service-account="${_BACKEND_SERVICE_ACCOUNT}"
          --execution-environment=gen2
          --no-allow-unauthenticated
          --set-env-vars="GIN_MODE=release,ENV=${_ENV},APP_FIRESTORE_PROJECT_ID=${PROJECT_ID},APP_FIRESTORE_DATABASE_ID=${_FIRESTORE_DATABASE_ID},APP_FIRESTORE_COLLECTION_PREFIX=${_FIRESTORE_COLLECTION_PREFIX},APP_GOOGLE_CLIENT_ID=${_BACKEND_GOOGLE_CLIENT_ID}"
          --set-secrets="APP_AUTH_JWT_SECRET=${_BACKEND_SECRET_JWT},APP_AUTH_STATE_SECRET=${_BACKEND_SECRET_STATE},APP_SECURITY_CSRF_SIGNING_KEY=${_BACKEND_SECRET_CSRF},APP_GOOGLE_CLIENT_SECRET=${_BACKEND_SECRET_GOOGLE_CLIENT_SECRET}"
          --set-traffic="latest=${BACKEND_TRAFFIC}"
          --quiet
          --max-instances=3
        )

        if [[ -n "${_BACKEND_SECRET_RECAPTCHA}" ]]; then
          BACKEND_CMD+=(--set-secrets="G_RECAPTCHA_SECRET=${_BACKEND_SECRET_RECAPTCHA}")
        fi

        if [[ -n "${_VPC_CONNECTOR}" ]]; then
          BACKEND_CMD+=(--vpc-connector="${_VPC_CONNECTOR}")
        fi

        BACKEND_CMD+=(--labels="service=${_BACKEND_SERVICE},stage=${_ENV},managed-by=cloud-build")

        "${BACKEND_CMD[@]}"

        FRONTEND_CMD=(
          gcloud run deploy "${_FRONTEND_SERVICE}-${_ENV}"
          --project="$PROJECT_ID"
          --region="${_REGION}"
          --platform=managed
          --image="${FRONTEND_IMAGE}"
          --service-account="${_FRONTEND_SERVICE_ACCOUNT}"
          --execution-environment=gen2
          --allow-unauthenticated
          --set-env-vars="ENV=${_ENV},VITE_API_BASE_URL=${_FRONTEND_API_BASE_URL}"
          --set-traffic="latest=${FRONTEND_TRAFFIC}"
          --quiet
        )

        if [[ -n "${_FRONTEND_SECRET_RECAPTCHA}" ]]; then
          FRONTEND_CMD+=(--set-secrets="VITE_RECAPTCHA_SECRET=${_FRONTEND_SECRET_RECAPTCHA}")
        fi

        FRONTEND_CMD+=(--labels="service=${_FRONTEND_SERVICE},stage=${_ENV},managed-by=cloud-build")

        "${FRONTEND_CMD[@]}"

images:
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/backend:${SHORT_SHA}
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/frontend:${SHORT_SHA}
